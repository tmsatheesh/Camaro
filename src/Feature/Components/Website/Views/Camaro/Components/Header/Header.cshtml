@model Camaro.Feature.Components.Models.IHeader
@using Glass.Mapper.Sc.Web.Mvc

<header class="main-header header-style-one">
    <div class="top-header">
        <div class="container">
            <div class="left-info">
                <p>
                    <i class="cameron-icon-email"></i>
                    @Html.Glass().RenderLink(Model, x => x.EmailLink, isEditable: true)
                </p>
            </div><!-- /.left-info -->
            <div class="right-info">
                <ul class="info-block">
                    <li>
                        <i class="cameron-icon-support"></i>
                        @Html.Glass().RenderLink(Model, x => x.PhoneLink, isEditable: true)

                    </li>
                    <li>
                        <a href="cart.html" class="cart-btn"><i class="cameron-icon-shopping-bag"></i><span class="count-text">(0)</span></a>
                    </li>
                </ul>
            </div><!-- /.right-info -->
        </div><!-- /.container -->
    </div><!-- /.top-header -->
    <nav class="navbar navbar-expand-lg navbar-light header-navigation stricky">
        <div class="container clearfix">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="logo-box clearfix">
                <a class="navbar-brand" href="index-2.html">
                    <img src="images/resources/logo-1-1.png" class="main-logo" alt="Awesome Image" />
                    <img src="images/resources/logo-1-2.png" class="stricky-logo" alt="Awesome Image" />
                </a>
                <button class="menu-toggler" data-target=".header-style-one .main-navigation">
                    <span class="fa fa-bars"></span>
                </button>
            </div><!-- /.logo-box -->
            <!-- Collect the nav links, forms, and other content for toggling -->

            <div class="main-navigation">
                <ul class=" navigation-box">
                    @if (Model.MenuItems != null && Model.MenuItems.Count() > 0)
                    {
                        foreach (var item in Model.MenuItems)
                        {
                            <li>
                                @using (Html.Glass().BeginRenderLink(item, x => x.Link, isEditable: true))
                                {
                                    @Html.Glass().Editable(item, x => x.LinkText)
                                }
                                @if (item.SubMenuItems != null && item.SubMenuItems.Any())
                                {
                                    <ul class="sub-menu">
                                        @foreach (var subitem in item.SubMenuItems)
                                        {
                                        <li>
                                            @using (Html.Glass().BeginRenderLink(subitem, x => x.Link, isEditable: true))
                                            {
                                                @Html.Glass().Editable(subitem, x => x.LinkText)
                                            }
                                            @if (subitem.SubMenuItems != null && subitem.SubMenuItems.Any())
                                            {
                                                <ul class="sub-menu">
                                                    @foreach (var subsubmenu in subitem.SubMenuItems)
                                                    {

                                                        <li>
                                                            @using (Html.Glass().BeginRenderLink(subsubmenu, x => x.Link, isEditable: true))
                                                            {
                                                                @Html.Glass().Editable(subsubmenu, x => x.LinkText)
                                                            }
                                                        </li>
                                                    }
                                                </ul>
                                            }
                                            </li>

                                        }




                                    </ul><!-- /.sub-menu -->
                                }
                            </li>
                        }
                    }

                </ul>
            </div><!-- /.navbar-collapse -->
            <div class="right-side-box">
                <div class="social">
                    @using (Html.Glass().BeginRenderLink(Model, x => x.FBlink, isEditable: true))
                    {
                        <i class="fa fa-facebook-f"></i>
                    }


                    @using (Html.Glass().BeginRenderLink(Model, x => x.TWlink, isEditable: true))
                    {
                        <i class="fa fa-twitter"></i>
                    }
                    @using (Html.Glass().BeginRenderLink(Model, x => x.VMlink, isEditable: true))
                    {
                        <i class="fa fa-vimeo"></i>
                    }
                    @using (Html.Glass().BeginRenderLink(Model, x => x.GPlink, isEditable: true))
                    {
                        <i class="fa fa-google-plus"></i>
                    }

                </div><!-- /.social -->
            </div><!-- /.right-side-box -->
        </div>
        <!-- /.container -->
    </nav>
</header><!-- /.main-header header-style-one -->
